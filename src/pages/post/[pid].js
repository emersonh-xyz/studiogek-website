import Head from 'next/head'
import React, { useEffect, useState } from 'react'
import { useSession, signOut, signIn } from 'next-auth/react'
import Navbar from '@/components/Navbar';
import fetchCampaignPost from '@/utils/fetch_campaign_post';
import { useRouter } from 'next/router'
import { Icon } from '@iconify/react';
import { Container, Text, Button, Spacer } from '@nextui-org/react';
import parse from "html-react-parser"


export default function Post() {

    const [post, setPost] = useState();
    const [streamableId, setStreamableId] = useState();
    const [postContent, setPostContent] = useState("")

    // Get search params
    const router = useRouter();
    const { pid } = router.query;


    // Get post from search params
    const getPost = async (id) => {
        const results = await fetchCampaignPost(id);
        setPost(results.data);

        const urlId = getStreamableLink(results.data.attributes.content);
        setStreamableId(urlId)
    }

    // Get streamable link from the post
    const getStreamableLink = (text) => {

        const pattern = /https?:\/\/(?:www\.)?streamable\.com\/(\w{6})/;
        // Use the match method to extract an array of all matches
        const matches = text.match(pattern);

        // Map the last 6 characters of each match

        if (matches) {
            const match = matches.map(match => match.slice(-6));
            return match[0]
        }

        return null;

    }


    useEffect(() => {

        // If search param isn't ready don't try.
        if (!pid) {
            return
        }

        // Call our asyncronous function
        getPost(pid)

        return () => {
            // this now gets called when the component unmounts
        }


    }, [pid])


    return (
        <>
            <Head>
                <title>Studio Gek | Post</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <header>
                <Navbar />
            </header>

            <main>

                <Container gap={0} lg>

                    {!streamableId &&
                        <div>
                            <Text h1>{post?.attributes.title}</Text>
                            <div dangerouslySetInnerHTML={{ __html: post?.attributes.content }} />

                            <Button auto icon={<Icon icon={"mdi:patreon"} />} color="gradient">
                                View post on Patreon
                            </Button>
                        </div>
                    }

                    {streamableId &&

                        <Container alignContent='center' justify='center' display='flex' direction='column'>

                            <Text css={{ ta: "center" }} h1>{post?.attributes.title}</Text>

                            <iframe

                                style={{
                                    border: "2px solid #ffffff"
                                }}
                                className="streamable-embed"
                                src={`https://streamable.com/o/${streamableId}`}
                                frameBorder="0" scrolling="no" width="1280"
                                height="720" allowFullScreen>
                            </iframe>
                        </Container>
                    }

                </Container>


            </main >

            <footer>

            </footer>

        </>
    )
}