import Head from 'next/head'
import React, { useEffect, useState } from 'react'
import { useSession, signOut, signIn } from 'next-auth/react'
import Navbar from '@/components/Navbar';
import PostCard from '@/components/PostCard';
import fetchUserTier from '@/utils/fetch_user_tier';
import fetchCampaignPosts from '@/utils/fetch_campaign_posts'
import { useRouter } from 'next/router';
import { Container, Card, Row, Text, Grid, Badge } from "@nextui-org/react";
import LoadingSpinner from '@/components/LoadingSpinner';
import DiscordWidget from '@/components/DiscordWidget'

export default function Patreon() {

  const { data: session, status } = useSession()

  const [userTier, setUserTier] = useState();
  const [postData, setPostData] = useState([]);
  const [authed, setAuthed] = useState();

  const router = useRouter();

  // Get all of the posts from the campaign
  const getPosts = async () => {
    const results = await fetchCampaignPosts();
    setPostData(results.data);
  }

  // Get the current tier of the user
  const getTier = async () => {
    const results = await fetchUserTier();
    setUserTier(results);
  }

  useEffect(() => {

    // Call our asyncronous functions
    getTier()
    getPosts()

    return () => {
      // this now gets called when the component unmounts
    }


  }, [])
  // Loop over all post data
  const PostItems = () => {
    return (
      postData.map((data) => {
        return <PostCard key={data.id} props={data} content={data.attributes.content} />
      })
    )
  }

  if (status === "loading") {
    return <LoadingSpinner />
  }

  if (status === "unauthenticated") {

  }

  return (
    <>
      <Head>
        <title>Studio Gek | Home</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header>
        <Navbar />
      </header>

      <main>


        <Container lg gap={0}>

          <Text

            h1
            size={60}
            css={{
              textGradient: "45deg, $yellow600 -20%, $red600 100%",
            }}
            weight="bold"

          >
            New from Patreon
          </Text>

          <div>
            <Text
              h4
              weight="thin"
            >
              View the latest posts straight from Studio Gek
            </Text>
          </div>



          {postData?.length > 0 ?

            <Grid.Container gap={1} justify="flex-start">
              < PostItems />
            </Grid.Container >

            :
            status === "authenticated" && <LoadingSpinner />

          }

          {status === "unauthenticated" &&

            <Badge disableOutline color="error">
              You must be logged in to view this content
            </Badge>


          }

        </Container>


      </main >

      <footer>

      </footer>

    </>
  )
}